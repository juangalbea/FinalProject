{"version":3,"sources":["Services/Services.js","components/Login.js","components/Signup.js","components/Profile.js","components/ImageAPI/ImageAPI.js","Services/Elements.js","components/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["AuthServices","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","axios","create","baseURL","process","withCredentials","Login","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","setState","getUser","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","_this2","react_default","a","createElement","onSubmit","type","onChange","e","react_router_dom","to","Component","Signup","Profile","onClick","ImageAPI","handleChangeImageURL","objectSpread","imageURL","isLoaded","hits","fetch","concat","res","json","result","_this3","_this4","_this$state","message","placeholder","updateImages","map","item","i","key","src","previewURL","findUrl","webformatURL","ElementServices","game","platforms","speed","logic","imageID","comment","description","userID","favourited","Game","rangeValue","arr","Array","currentTarget","fill","x","y","w","h","color","handleChangeName","handleChangeSpeed","handleChangeLogic","handleChangeImageID","_e$currentTarget","id","newValue","err","url","Fragment","min","max","defaultValue","className","components_ImageAPI_ImageAPI","App","getTheUser","userObj","loggedInUser","history","push","react_router","exact","path","render","components_Game_Game","Profile_Profile","assign","components_Login","Signup_Signup","withRouter","Boolean","window","location","hostname","match","ReactDOM","src_App_0","router","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wVAEqBA,EACnB,SAAAA,IAAa,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAObG,OAAS,SAACC,EAAUC,GAClB,OAAON,EAAKO,QAAQC,KAAK,UAAW,CAACH,WAAUC,aAC9CG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAThBV,KAYbW,MAAQ,SAACP,EAAUC,GACjB,OAAON,EAAKO,QAAQC,KAAK,SAAU,CAACH,WAAUC,aAC7CG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAdhBV,KAiBbY,SAAW,WACT,OAAOb,EAAKO,QAAQO,IAAI,aACzBL,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAnBdV,KAsBbc,OAAS,WACP,OAAOf,EAAKO,QAAQO,IAAI,WACzBL,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAvBzBV,KAAKM,QAAUS,IAAMC,OAAO,CAC1BC,QAASC,oCACTC,iBAAiB,aC0CRC,cA1Cb,SAAAA,EAAYC,GAAM,IAAAtB,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAoB,IAChBrB,EAAAE,OAAAqB,EAAA,EAAArB,CAAAD,KAAAC,OAAAsB,EAAA,EAAAtB,CAAAmB,GAAAI,KAAAxB,KAAMqB,KAKRI,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAMvB,EAAWL,EAAK6B,MAAMxB,SACtBC,EAAWN,EAAK6B,MAAMvB,SAC5BN,EAAKO,QAAQK,MAAMP,EAAUC,GAC5BG,KAAM,SAAAC,GACHV,EAAK8B,SAAS,CAAEzB,SAAU,GAAIC,SAAU,KACxCN,EAAKsB,MAAMS,QAAQrB,KAEtBsB,MAAO,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAfbjC,EAkBlBoC,aAAe,SAACT,GAAU,IAAAU,EACFV,EAAMW,OAArBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACbxC,EAAK8B,SAAL5B,OAAAuC,EAAA,EAAAvC,CAAA,GAAgBqC,EAAOC,KAlBvBxC,EAAK6B,MAAQ,CAAExB,SAAU,GAAIC,SAAU,IACvCN,EAAKO,QAAU,IAAIR,EAHHC,wEAuBV,IAAA0C,EAAAzC,KACN,OACE0C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,SAAU7C,KAAKyB,kBACnBiB,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOR,KAAK,WAAWC,MAAOvC,KAAK4B,MAAMxB,SAAU2C,SAAW,SAAAC,GAAC,OAAIP,EAAKN,aAAaa,MACjGN,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,YAAUN,KAAK,WAAWC,MAAOvC,KAAK4B,MAAMvB,SAAU0C,SAAW,SAAAC,GAAC,OAAIP,EAAKN,aAAaa,MAExFN,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASP,MAAM,WAE7BG,EAAAC,EAAAC,cAAA,+BACIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAI,WAAV,oBApCQC,aCDCC,cAEnB,SAAAA,EAAY/B,GAAM,IAAAtB,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAoD,IAChBrD,EAAAE,OAAAqB,EAAA,EAAArB,CAAAD,KAAAC,OAAAsB,EAAA,EAAAtB,CAAAmD,GAAA5B,KAAAxB,KAAMqB,KAMRI,iBAAmB,SAACC,GACpBA,EAAMC,iBACN,IAAMvB,EAAWL,EAAK6B,MAAMxB,SACtBC,EAAWN,EAAK6B,MAAMvB,SAE5BN,EAAKO,QAAQH,OAAOC,EAAUC,GAC7BG,KAAM,SAAAC,GACHV,EAAK8B,SAAS,CACVzB,SAAU,GACVC,SAAU,OAIjB0B,MAAO,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MApBXjC,EAuBpBoC,aAAe,SAACT,GAAU,IAAAU,EACFV,EAAMW,OAArBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACbxC,EAAK8B,SAAL5B,OAAAuC,EAAA,EAAAvC,CAAA,GAAgBqC,EAAOC,KAvBrBxC,EAAK6B,MAAQ,CAAExB,SAAU,GAAIC,SAAU,IACvCN,EAAKO,QAAU,IAAIR,EAHHC,wEA6BZ,IAAA0C,EAAAzC,KACN,OACE0C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,SAAU7C,KAAKyB,kBACnBiB,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOR,KAAK,WAAWC,MAAOvC,KAAK4B,MAAMxB,SAAU2C,SAAW,SAAAC,GAAC,OAAIP,EAAKN,aAAaa,MAEjGN,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,YAAUN,KAAK,WAAWC,MAAOvC,KAAK4B,MAAMvB,SAAU0C,SAAW,SAAAC,GAAC,OAAIP,EAAKN,aAAaa,MAExFN,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASP,MAAM,YAG7BG,EAAAC,EAAAC,cAAA,iCACIF,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAI,UAAV,mBA7C0BC,aCFfE,mLACV,IAAAtD,EAAAC,KACP,OACE0C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK5C,KAAKqB,MAAMjB,SAAhB,sBACAsC,EAAAC,EAAAC,cAAA,UAAQU,QAAS,SAACN,GAAKjD,EAAKsB,MAAMP,OAAOkC,KAAzC,kBAL6BG,aCwJtBI,2BArJb,SAAAA,EAAYlC,GAAO,IAAAtB,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAuD,IACjBxD,EAAAE,OAAAqB,EAAA,EAAArB,CAAAD,KAAAC,OAAAsB,EAAA,EAAAtB,CAAAsD,GAAA/B,KAAAxB,KAAMqB,KASRmC,qBAAuB,SAAAR,GACrBjD,EAAK8B,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GACKF,EAAK6B,MADV,CAEE8B,SAAUV,EAAEX,OAAOE,UAXrBxC,EAAK6B,MAAQ,CACXI,MAAO,KACP2B,UAAU,EACVC,KAAM,GACNF,SAAU,IANK3D,4EAiBNiD,GAAG,IAAAP,EAAAzC,KACdgD,EAAErB,iBACFkC,MAAK,qEAAAC,OAED9D,KAAK4B,MAAM8B,SAFV,mCAKFlD,KAAK,SAAAuD,GAAG,OAAIA,EAAIC,SAChBxD,KAAK,SAAAyD,GACJxB,EAAKZ,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GACKwC,EAAKb,MADV,CAEE+B,UAAU,EACVC,KAAMK,EAAOL,UAQhB7B,MAAM,SAAAC,GACLS,EAAKZ,SAAS,CACZ8B,UAAU,EACV3B,wDAQY,IAAAkC,EAAAlE,KAClB6D,MAAK,qEAAAC,OAED9D,KAAK4B,MAAM8B,SAFV,mCAKFlD,KAAK,SAAAuD,GAAG,OAAIA,EAAIC,SAChBxD,KACC,SAAAyD,GACEC,EAAKrC,SAAS,CACZ8B,UAAU,EACVC,KAAMK,EAAOL,SAMhB7B,MAAM,SAAAC,GACLkC,EAAKrC,SAAS,CACZ8B,UAAU,EACV3B,6CAKD,IAAAmC,EAAAnE,KACPiC,QAAQC,IAAIlC,KAAK4B,MAAM8B,UADhB,IAAAU,EAE2BpE,KAAK4B,MAA/BI,EAFDoC,EAECpC,MAAO2B,EAFRS,EAEQT,SAAUC,EAFlBQ,EAEkBR,KACzB,OAAI5B,EACKU,EAAAC,EAAAC,cAAA,qBAAaZ,EAAMqC,SAChBV,EAIRjB,EAAAC,EAAAC,cAAA,WA0CEF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLwB,YAAY,WACZvB,SAAU/C,KAAKwD,qBACflB,KAAK,WACLC,MAAOvC,KAAK4B,MAAM8B,WAEpBhB,EAAAC,EAAAC,cAAA,UAAQU,QAAS,SAAAN,GAAC,OAAImB,EAAKI,aAAavB,KAAxC,UACAN,EAAAC,EAAAC,cAAA,UACGgB,EAAKY,IAAI,SAACC,EAAMC,GAAP,OACRhC,EAAAC,EAAAC,cAAA,MAAI+B,IAAKD,GAEPhC,EAAAC,EAAAC,cAAA,OACEgC,IAAKH,EAAKI,WACVvB,QAAS,kBAAMa,EAAK9C,MAAMyD,QAAQL,EAAKM,sBA3D5CrC,EAAAC,EAAAC,cAAA,gCAhFUO,cCFF6B,SACnB,SAAAA,IAAa,IAAAjF,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAgF,GAAAhF,KAObiF,KAAO,SAACC,EAAW5C,EAAM6C,EAAOC,EAAOC,GACrC,OAAOtF,EAAKO,QAAQC,KAAK,SAAU,CAAC2E,YAAW5C,OAAM6C,QAAOC,QAAOC,YAClE7E,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAThBV,KAYbsF,QAAU,SAACC,EAAaC,EAAQC,GAC9B,OAAO1F,EAAKO,QAAQC,KAAK,WAAY,CAACgF,cAAaC,SAAQC,eAC1DjF,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAb3BV,KAAKM,QAAUS,IAAMC,OAAO,CAC1BC,QAASC,oCACTC,iBAAiB,MCmLRuE,qBAlLf,SAAAA,EAAYrE,GAAO,IAAAtB,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA0F,IACf3F,EAAAE,OAAAqB,EAAA,EAAArB,CAAAD,KAAAC,OAAAsB,EAAA,EAAAtB,CAAAyF,GAAAlE,KAAAxB,KAAMqB,KAoBVsE,WAAa,SAAC3C,GACVjD,EAAK8B,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GACOF,EAAK6B,MADZ,CAEIgE,IAAK,IAAIC,OAAO7C,EAAE8C,cAAcvD,OAAOwD,KAAK,GAAGvB,IAAI,SAACxB,EAAG0B,GAAJ,OAAUA,EAAI,IACjEQ,UAAW,IAAIW,OAAO7C,EAAE8C,cAAcvD,OAAOwD,KAAK,GAAGvB,IAAI,iBACrD,CACIwB,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,MAAO,WA/BJrG,EAqCnBsG,iBAAmB,SAACrD,GAChBjD,EAAK8B,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GACOF,EAAK6B,MADZ,CAEIU,KAAMU,EAAEX,OAAOE,UAxCJxC,EA4CnBuG,kBAAoB,SAACtD,GACjBjD,EAAK8B,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GACOF,EAAK6B,MADZ,CAEIuD,MAAOnC,EAAEX,OAAOE,UA/CLxC,EAmDnBwG,kBAAoB,SAACvD,GACjBjD,EAAK8B,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GACOF,EAAK6B,MADZ,CAEIwD,MAAOpC,EAAEX,OAAOE,UAtDLxC,EA0DnByG,oBAAsB,SAACxD,GACnBjD,EAAK8B,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GACOF,EAAK6B,MADZ,CAEIyD,QAASrC,EAAEX,OAAOE,UA7DPxC,EAiEnBoC,aAAe,SAACa,GAAM,IAAAyD,EACQzD,EAAE8C,cAArBY,EADWD,EACXC,GAAIpE,EADOmE,EACPnE,KAAMC,EADCkE,EACDlE,MACboE,EAAW5G,EAAK6B,MAAMsD,UAC1ByB,EAASD,GAAIpE,GAAQC,EACrBxC,EAAK8B,SAAS,CAAC8E,cArEA5G,EAwEnB0B,iBAAmB,SAACuB,GAChBA,EAAErB,iBACF,IAAMW,EAAOvC,EAAK6B,MAAMU,KAClB6C,EAAQpF,EAAK6B,MAAMuD,MACnBC,EAAQrF,EAAK6B,MAAMwD,MACnBC,EAAUtF,EAAK6B,MAAMyD,QACrBH,EAAYnF,EAAK6B,MAAMsD,UAC7BnF,EAAKO,QAAQ2E,KAAKC,EAAW5C,EAAM6C,EAAOC,EAAOC,GAChD7E,KAAK,SAAC0E,GACHjD,QAAQC,IAAIgD,KAEfnD,MAAM,SAAA6E,GAAG,OAAI3E,QAAQC,IAAI0E,MAnFX7G,EAuFnB+E,QAAU,SAAC+B,GACP9G,EAAK8B,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GACOF,EAAK6B,MADZ,CAEIyD,QAASwB,MAxFb9G,EAAK6B,MAAQ,CACTgE,IAAK,IAAIC,MAAM,GAAGE,KAAK,GAAGvB,IAAI,SAACxB,EAAG0B,GAAJ,OAAUA,EAAI,IAC5CQ,UAAW,IAAIW,MAAM,GAAGE,KAAK,GAAGvB,IAAI,iBAChC,CACIwB,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,MAAO,OAGf9D,KAAM,GACN6C,MAAO,GACPC,MAAO,GACPC,QAAS,IAEbtF,EAAKO,QAAU,IAAI0E,EAlBJjF,wEA8FV,IAAA0C,EAAAzC,KACL,OACI0C,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACIpE,EAAAC,EAAAC,cAAA,QAAMC,SAAU7C,KAAKyB,kBACrBiB,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAAQiE,IAAI,IAAIC,IAAI,KAAKC,aAAa,IAAIlE,SAAU/C,KAAK2F,aAEjE3F,KAAK4B,MAAMgE,IAAIpB,IAAI,SAACxB,EAAG0B,GACnB,OAAOhC,EAAAC,EAAAC,cAAA,OAAK+B,IAAKD,EAAGwC,UAAU,aAC5BxE,EAAAC,EAAAC,cAAA,uBAAgB8B,EAAI,GACpBhC,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAO4D,GAAIhC,EAAGJ,YAAY,IAAIvB,SAAUN,EAAKN,aAAcG,KAAK,MAC5EI,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAO4D,GAAIhC,EAAGJ,YAAY,IAAIvB,SAAUN,EAAKN,aAAcG,KAAK,MAC5EI,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAO4D,GAAIhC,EAAGJ,YAAY,IAAIvB,SAAUN,EAAKN,aAAcG,KAAK,MAC5EI,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAO4D,GAAIhC,EAAGJ,YAAY,IAAIvB,SAAUN,EAAKN,aAAcG,KAAK,MAC5EI,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAO4D,GAAIhC,EAAGwC,UAAU,gBAAgB5C,YAAY,gBAAgBvB,SAAUN,EAAKN,aAAcG,KAAK,aAV5H,eAeQI,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOwB,YAAY,OAAOvB,SAAU/C,KAAKqG,iBAAkB/D,KAAK,aAC5EI,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOwB,YAAY,QAAQvB,SAAU/C,KAAKsG,kBAAmBhE,KAAK,UAC9EI,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOwB,YAAY,QAAQvB,SAAU/C,KAAKuG,kBAAmBjE,KAAK,UAC9EI,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOwB,YAAY,UAAUvB,SAAU/C,KAAKwG,oBAAqBlE,KAAK,UAAUC,MAAOvC,KAAK4B,MAAMyD,UAC9G3C,EAAAC,EAAAC,cAACuE,EAAD,CAAWrC,QAAS9E,KAAK8E,UAGzBpC,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASP,MAAM,oBAxH5BY,cCObiE,cAEJ,SAAAA,EAAY/F,GAAM,IAAAtB,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAoH,IAChBrH,EAAAE,OAAAqB,EAAA,EAAArB,CAAAD,KAAAC,OAAAsB,EAAA,EAAAtB,CAAAmH,GAAA5F,KAAAxB,KAAMqB,KAeRgG,WAAa,SAACC,GACVvH,EAAK8B,SAAL5B,OAAAwD,EAAA,EAAAxD,CAAA,GAAkBF,EAAK6B,MAAvB,CACE2F,aAAcD,MAlBFvH,EAsBlBe,OAAQ,SAACkC,GACPA,EAAErB,iBACF5B,EAAKO,QAAQQ,SACZN,KAAK,WACJT,EAAK8B,SAAS,CACZ0F,aAAc,MACb,WACDxH,EAAKsB,MAAMmG,QAAQC,KAAK,eA3B5B1H,EAAK6B,MAAQ,CACX2F,aAAc,MAEhBxH,EAAKO,QAAU,IAAIR,EALHC,mFASE,IAAA0C,EAAAzC,KAClBA,KAAKM,QAAQM,WAAWJ,KAAK,SAAAC,GAC3BwB,QAAQC,IAAIzB,GACZgC,EAAK4E,WAAW5G,sCAkCZ,IAAAyD,EAAAlE,KAEN,OAAGA,KAAK4B,MAAM2F,aAEV7E,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACEpE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACAhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAAInF,EAAAC,EAAAC,cAACkF,EAAD,SACpCpF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAInF,EAAAC,EAAAC,cAACuE,EAAD,SACxCzE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,WAAK,OAAOnF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAUxE,GAAG,gBAC5DR,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAInF,EAAAC,EAAAC,cAACmF,EAAD9H,OAAA+H,OAAA,GAAa9D,EAAKtC,MAAM2F,aAAxB,CAAsCzG,OAAQoD,EAAKpD,eAOhG4B,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACEpE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAInF,EAAAC,EAAAC,cAACqF,EAADhI,OAAA+H,OAAA,GAAW9D,EAAKtC,MAAM2F,aAAtB,CAAoCzF,QAASoC,EAAKmD,iBACzF3E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAInF,EAAAC,EAAAC,cAACsF,EAAWhE,EAAKtC,MAAM2F,0BAnEzDpE,aA8EHgF,cAAWf,GC/ENgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASZ,OACPnF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAC8F,EAAD,CAAKC,OAAQC,OAEfC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzI,KAAK,SAAA0I,GACjCA,EAAaC","file":"static/js/main.22a58601.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class AuthServices {\n  constructor(){\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_URL,  //'http://localhost:5000/auth'\n      withCredentials: true\n    })\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password)=>{\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = ()=>{\n    return this.service.get('/userData')\n  .then(response => response.data)\n  }\n\n  logout = ()=>{\n    return this.service.get('/logout')\n  .then(response => response.data)\n  }\n\n\n\n\n}","import React, { Component } from 'react';\nimport AuthServices from '../Services/Services'\nimport { Link, Redirect } from 'react-router-dom';\n\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthServices();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service.login(username, password)\n    .then( response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response)\n    })\n    .catch( error => console.log(error) )\n  }\n    \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n    \n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          <label>Password:</label>\n          <textarea name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>Don't have account? \n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport AuthServices from '../Services/Services'\n\nexport default class Signup extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthServices();\n  }\n\n\n  handleFormSubmit = (event) => {\n  event.preventDefault();\n  const username = this.state.username;\n  const password = this.state.password;\n\n  this.service.signup(username, password)\n  .then( response => {\n      this.setState({\n          username: \"\", \n          password: \"\",\n      });\n      // this.props.getUser(response)\n  })\n  .catch( error => console.log(error) )\n}\n\nhandleChange = (event) => {  \n  const {name, value} = event.target;\n  this.setState({[name]: value});\n}\n    \n\nrender(){\n  return(\n    <div>\n      <form onSubmit={this.handleFormSubmit}>\n        <label>Username:</label>\n        <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n        \n        <label>Password:</label>\n        <textarea name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n        \n        <input type=\"submit\" value=\"Signup\" />\n      </form>\n\n      <p>Already have account? \n          <Link to={\"/login\"}> Login</Link>\n      </p>\n\n    </div>\n  )\n}\n}\n","import React, { Component } from 'react'\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>{this.props.username} DONDE VAMOS HOY??</h1>\n        <button onClick={(e)=>{this.props.logout(e)}}>LOGOUT</button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./ImageAPI.css\";\nimport \"bulma/css/bulma.css\";\n\nclass ImageAPI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      hits: [],\n      imageURL: \"\"\n    };\n  }\n\n  handleChangeImageURL = e => {\n    this.setState({\n      ...this.state,\n      imageURL: e.target.value\n    });\n  };\n\n  updateImages(e) {\n    e.preventDefault();\n    fetch(\n      `https://pixabay.com/api/?key=11997623-103c7c4f1fd04d1a3ab285b96&q=${\n        this.state.imageURL\n      }&image_type=photo&&per_page=20`\n    )\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          ...this.state,\n          isLoaded: true,\n          hits: result.hits\n        });\n        //   this.setState({\n        //     isLoaded: true,\n        //     hits: result.hits\n        //   });\n        // })\n      })\n      .catch(error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n  }\n\n  componentDidMount() {\n    fetch(\n      `https://pixabay.com/api/?key=11997623-103c7c4f1fd04d1a3ab285b96&q=${\n        this.state.imageURL\n      }&image_type=photo&&per_page=20`\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            hits: result.hits\n          });\n        })\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        .catch(error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\n  render() {\n    console.log(this.state.imageURL);\n    const { error, isLoaded, hits } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          {/* <div className=\"modal\">\n  <div className=\"modal-background\"></div>\n  <div className=\"modal-card\">\n    <header className=\"modal-card-head\">\n      <p className=\"modal-card-title\">Modal title</p>\n      <button className=\"delete\" aria-label=\"close\"></button>\n    </header>\n    <section className=\"modal-card-body\">\n   hola\n    </section>\n    <footer className=\"modal-card-foot\">\n      <button className=\"button is-success\">Save changes</button>\n      <button className=\"button\">Cancel</button>\n    </footer>\n  </div>\n</div> */}\n\n          {/* <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">\n  Launch demo modal\n</button>\n\n<div className=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n  <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">Modal title</h5>\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        ...\n      </div>\n      <div className=\"modal-footer\">\n        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div> */}\n\n          <input\n            type=\"text\"\n            placeholder=\"imageurl\"\n            onChange={this.handleChangeImageURL}\n            name=\"imageURL\"\n            value={this.state.imageURL}\n          />\n          <button onClick={e => this.updateImages(e)}>Search</button>\n          <ul>\n            {hits.map((item, i) => (\n              <li key={i}>\n                {/* {item.user} {item.likes} */}\n                <img\n                  src={item.previewURL}\n                  onClick={() => this.props.findUrl(item.webformatURL)}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ImageAPI;\n//process.env.PIXABAY_SECRET_CODE\n\n//${process.env.PIXABAY_SECRET_CODE}\n","import axios from 'axios';\n\nexport default class ElementServices {\n  constructor(){\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_URL, //'http://localhost:5000/elements',\n      withCredentials: true\n    })\n  }\n\n  game = (platforms, name, speed, logic, imageID) => {\n    return this.service.post('/games', {platforms, name, speed, logic, imageID})\n    .then(response => response.data)\n  }\n\n  comment = (description, userID, favourited)=>{\n    return this.service.post('/comment', {description, userID, favourited})\n    .then(response => response.data)\n\n  }\n\n  // loggedin = ()=>{\n  //   return this.service.get('/userData')\n  // .then(response => response.data)\n  // }\n\n  // logout = ()=>{\n  //   return this.service.get('/logout')\n  // .then(response => response.data)\n  // }\n\n  // handleChangeName = (e) => {\n  //   this.setState({\n  //       ...this.state,\n  //       newName: e.target.value\n  //   })\n  //  }   \n\n\n}","import React, { Component } from 'react';\nimport './Game.css';\nimport ImageAPI from '../ImageAPI/ImageAPI'\nimport ElementServices from \"../../Services/Elements\"\nimport { platform } from 'os';\n\nclass Game extends Component {\nconstructor(props) {\n    super(props)\n    this.state = {\n        arr: new Array(4).fill(0).map((e, i) => i + 1),\n        platforms: new Array(4).fill(0).map(() => (\n            {\n                x: \"\",\n                y: \"\",\n                w: \"\",\n                h: \"\",\n                color: \" \"\n            }\n        )),\n        name: \"\",\n        speed: \"\",\n        logic: \"\",\n        imageID: \"\"\n    }\n    this.service = new ElementServices();\n}\n\nrangeValue = (e) => {\n    this.setState({\n        ...this.state,\n        arr: new Array(+e.currentTarget.value).fill(0).map((e, i) => i + 1),\n        platforms: new Array(+e.currentTarget.value).fill(0).map(() => (\n            {\n                x: \"\",\n                y: \"\",\n                w: \"\",\n                h: \"\",\n                color: \" \"\n            }\n        ))\n    })\n}\n\nhandleChangeName = (e) => {\n    this.setState({\n        ...this.state,\n        name: e.target.value\n    })\n   }\n\nhandleChangeSpeed = (e) => {\n    this.setState({\n        ...this.state,\n        speed: e.target.value\n    })\n}\n\nhandleChangeLogic = (e) => {\n    this.setState({\n        ...this.state,\n        logic: e.target.value\n    })\n}\n\nhandleChangeImageID = (e) => {\n    this.setState({\n        ...this.state,\n        imageID: e.target.value\n    })\n}\n\nhandleChange = (e) => {\n    const {id, name, value} = e.currentTarget;\n    let newValue = this.state.platforms\n    newValue[id][name] = value; \n    this.setState({newValue})\n}   \n\nhandleFormSubmit = (e) => {\n    e.preventDefault();\n    const name = this.state.name;\n    const speed = this.state.speed;\n    const logic = this.state.logic;\n    const imageID = this.state.imageID;\n    const platforms = this.state.platforms;\n    this.service.game(platforms, name, speed, logic, imageID)\n    .then((platforms)=> {\n        console.log(platforms)\n    })\n    .catch(err => console.log(err))\n\n}\n\nfindUrl = (url) => {\n    this.setState({\n        ...this.state,\n        imageID: url\n    })\n}\n\nrender() {\n    return (\n        <React.Fragment>\n            <form onSubmit={this.handleFormSubmit}>\n            <input type=\"range\" min=\"4\" max=\"10\" defaultValue=\"4\" onChange={this.rangeValue} />\n            {\n                this.state.arr.map((e, i) => {\n                    return <div key={i} className=\"platforms\"> \n                      <h4 >Platform: {i + 1}</h4>\n                      <input type=\"text\" id={i} placeholder=\"X\" onChange={this.handleChange} name=\"x\"></input>\n                      <input type=\"text\" id={i} placeholder=\"Y\" onChange={this.handleChange} name=\"y\"></input>\n                      <input type=\"text\" id={i} placeholder=\"W\" onChange={this.handleChange} name=\"w\"></input>\n                      <input type=\"text\" id={i} placeholder=\"H\" onChange={this.handleChange} name=\"h\"></input>\n                      <input type=\"text\" id={i} className=\"colorPlatform\" placeholder=\"colorPlatform\" onChange={this.handleChange} name=\"color\"></input>\n                    </div>\n                })\n            }\n            Otras cosas:\n                    <input type=\"text\" placeholder=\"Name\" onChange={this.handleChangeName} name=\"gameName\"></input>\n                    <input type=\"text\" placeholder=\"speed\" onChange={this.handleChangeSpeed} name=\"speed\"></input>\n                    <input type=\"text\" placeholder=\"logic\" onChange={this.handleChangeLogic} name=\"logic\"></input>\n                    <input type=\"text\" placeholder=\"imageID\" onChange={this.handleChangeImageID} name=\"imageID\" value={this.state.imageID}></input>\n                    <ImageAPI  findUrl={this.findUrl} />\n                    \n                    \n                    <input type=\"submit\" value=\"Submit\"/>\n            </form>\n        </React.Fragment>\n    )\n}\n\n\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     isGoing: true,\n  //     numberOfGuests: 2\n  //   };\n\n  //   this.handleInputChange = this.handleInputChange.bind(this);\n  // }\n\n  // handleInputChange(event) {\n  //   const target = event.target;\n  //   const value = target.type === 'checkbox' ? target.checked : target.value;\n  //   const name = target.name;\n\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // }\n\n  // render() {\n  //   return (\n  //     <form>\n  //       <label>\n  //         Platforms number:\n         \n  //         <input type=\"range\" name=\"challengeNumber\" id=\"challengeNumber\" defaultValue=\"2\" min=\"0\" max=\"16\"\n  //       oninput=\"challengeOutputId.value = challengeNumber.value\"></input>\n  //       </label>\n  //       <label>\n  //         Is going:\n  //         <input\n  //           name=\"isGoing\"\n  //           type=\"checkbox\"\n  //           checked={this.state.isGoing}\n  //           onChange={this.handleInputChange} />\n  //       </label>\n  //       <br />\n  //       <label>\n  //         Number of guests:\n  //         <input\n  //           name=\"numberOfGuests\"\n  //           type=\"number\"\n  //           value={this.state.numberOfGuests}\n  //           onChange={this.handleInputChange} />\n  //       </label>\n  //     </form>\n  //   );\n  // }\n}\n\nexport default Game;\n\n\n\n// import React, { Component } from 'react'\n// export default class Home extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             arr: new Array(4).fill(0).map((e, i) => i + 1),\n//             platforms: new Array(4).fill(0).map(() => (\n//                 {\n//                     x: \"\",\n//                     y: \"\",\n//                     w: \"\",\n//                     h: \"\",\n//                     color: \" \"\n//                 }\n//             ))\n//         }\n//     }\n//     formSubmit = (e) => {\n//         e.preventDefault();\n//         //Aqui tienes que poner la llamada al service!\n//         console.log(this.state.platforms);\n//     }\n//     changeInput = (e) => {\n//         const { id, name, value } = e.currentTarget;\n//         let newState = [...this.state.platforms];\n//         newState[id][name] = value;\n//         this.setState({ ...this.state, newState });\n//     }\n//     rangeValue = (e) => {\n//         this.setState({\n//             ...this.state,\n//             arr: new Array(+e.currentTarget.value).fill(0).map((e, i) => i + 1),\n//             platforms: new Array(+e.currentTarget.value).fill(0).map(() => (\n//                 {\n//                     x: \"\",\n//                     y: \"\",\n//                     w: \"\",\n//                     h: \"\",\n//                     color: \" \"\n//                 }\n//             ))\n//         })\n//     }\n//     render() {\n//         console.log(this.state.arr)\n//         console.log(this.state.platforms);\n//         return (\n//             <React.Fragment>\n//                 <input type=\"range\" min=\"4\" max=\"8\" defaultValue=\"4\" onChange={this.rangeValue} />\n//                 <form onSubmit={this.formSubmit}>\n//                     {\n//                         this.state.arr.map((e, i) => (\n//                             <div key={i}>\n//                                 <label htmlFor=\"x\">X:</label>\n//                                 <input type=\"number\" name=\"x\" id={i} onChange={this.changeInput} value={this.state.platforms[i].x} />\n//                                 <label htmlFor=\"y\">Y:</label>\n//                                 <input type=\"number\" name=\"y\" id={i} onChange={this.changeInput} value={this.state.platforms[i].y} />\n//                                 <label htmlFor=\"w\">W:</label>\n//                                 <input type=\"number\" name=\"w\" id={i} onChange={this.changeInput} value={this.state.platforms[i].w} />\n//                                 <label htmlFor=\"h\">W:</label>\n//                                 <input type=\"number\" name=\"h\" id={i} onChange={this.changeInput} value={this.state.platforms[i].h} />\n//                                 <label htmlFor=\"color\">Color:</label>\n//                                 <input type=\"text\" name=\"color\" id={i} onChange={this.changeInput} value={this.state.platforms[i].color} />\n//                             </div>\n//                         ))\n//                     }\n//                     <input type=\"submit\" />\n//                 </form>\n//             </React.Fragment>\n//         )\n//     }\n// }","import React, {Component} from 'react';\n\nimport './App.css';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom'\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Profile from './components/Profile';\nimport AuthServices from './Services/Services'\nimport ImageAPI from './components/ImageAPI/ImageAPI'\nimport Game from './components/Game/Game'\n// import Comment from './components/Comment/Comment'\nimport \"bulma/css/bulma.css\";\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      loggedInUser: null,\n    }\n    this.service = new AuthServices();\n\n  }\n\n  componentDidMount() {\n    this.service.loggedin().then(response => {\n      console.log(response)\n      this.getTheUser(response);\n    })\n  }\n\n  getTheUser = (userObj) => {\n      this.setState({...this.state,\n        loggedInUser: userObj\n      })\n  }\n\n  logout= (e) => {\n    e.preventDefault()\n    this.service.logout()\n    .then(()=>{\n      this.setState({\n        loggedInUser: null\n      }, () => {\n        this.props.history.push(\"/login\")\n      })\n    })\n  }\n\n\n  // fetchUser= () => {\n  //   this.service.loggedin()\n  //   .then(response=>{\n  //     this.setState({\n  //       loggedInUser: response\n  //     })\n  //   })\n  // }\n\n\n  \n  render(){\n    \n    if(this.state.loggedInUser){\n      return (\n        <React.Fragment>\n          <Switch>\n          <Route exact path='/game' render={()=><Game   />}/>\n            <Route exact path='/images' render={()=><ImageAPI   />}/>\n            <Route exact path='/login' render={()=>{return <Redirect to=\"/profile\" />}}/>\n            <Route exact path='/profile' render={()=><Profile {...this.state.loggedInUser} logout={this.logout}/>}/>\n            {/* <Route exact path='/comment' render={()=><Comment   />}/> */}\n          </Switch>\n        </React.Fragment>\n      );\n    }else{\n      return (\n        <React.Fragment>\n          <Switch>\n            <Route exact path='/login' render={()=><Login {...this.state.loggedInUser} getUser={this.getTheUser}/>}/>\n            <Route exact path='/signup' render={()=><Signup {...this.state.loggedInUser}/>}/>\n            \n           </Switch>\n        </React.Fragment>\n      )\n    }\n      \n  }\n\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App router={Router} />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}